{"version":3,"sources":["assets/scss/addTodo.module.scss","assets/scss/todoList.module.scss","reducers/todos.ts","reducers/visibilityFilter.tsx","reducers/index.ts","actions/index.ts","container/AddTodo.tsx","components/Link.tsx","container/FilterLink.tsx","components/Filter.tsx","components/Todo.tsx","components/TodoList.tsx","container/VisibleTodoList.tsx","App.tsx","index.tsx","assets/scss/todo.module.scss"],"names":["module","exports","todos","state","action","type","id","text","completed","map","todo","filter","visibilityFilter","combineReducers","nextTodoId","connect","dispatch","useDispatch","inputRef","useRef","onSubmit","e","preventDefault","current","value","trim","className","styles","label_wrap","htmlFor","ref","Link","active","children","onClick","disabled","ownProps","Filter","FilterLink","Todo","toggleTaskCompleted","editTodo","deleteTodo","useState","isEditing","setEdit","newTodo","setNewTodo","editTemplate","edit_wrap","onChange","target","viewTemplate","checkbox_wrap","defaultChecked","todo_label","TodoList","visible","toggleTodo","list_head","length","getVisibleTodoList","getVisible","App","VisibleTodoList","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3dc5e844.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label_wrap\":\"addTodo_label_wrap__1r35E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list_head\":\"todoList_list_head__3I2V0\"};","import type { ToDoItemType, ToDoActionType } from '../types/todos'\r\n\r\nconst todos = (\r\n  state: ToDoItemType[] = [],\r\n  action: ToDoActionType\r\n) => {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: false,\r\n        }\r\n      ]\r\n    case 'EDIT_TODO':\r\n      return state.map((todo) => (\r\n        todo.id === action.id\r\n          ? { ...todo, text: action.text }\r\n          : todo\r\n      ))\r\n    case 'DELETE_TODO':\r\n      return state.filter((todo) => {\r\n        return todo.id !== action.id\r\n      })\r\n    case 'TOGGLE_TODO':\r\n      return state.map((todo) =>\r\n        (todo.id === action.id)\r\n          ? { ...todo, completed: !todo.completed }\r\n          : todo\r\n      )\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todos\r\n","import type { Filter } from '../types/actions'\r\n\r\ninterface VisibilityFilterAction {\r\n  type: string;\r\n  filter: Filter;\r\n}\r\n\r\nconst visibilityFilter = (\r\n  state: Filter = 'SHOW_ALL',\r\n  action: VisibilityFilterAction\r\n) => {\r\n  switch (action.type) {\r\n    case 'SET_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibilityFilter","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  visibilityFilter,\r\n})","import type { Filter } from '../types/actions'\r\n\r\nlet nextTodoId = 0\r\nexport const addTodo = (text: string) => ({\r\n  type: 'ADD_TODO',\r\n  id: nextTodoId++,\r\n  text\r\n})\r\n\r\nexport const editTodo = (id: number, text: string) => ({\r\n  type: 'EDIT_TODO',\r\n  id,\r\n  text\r\n})\r\n\r\nexport const deleteTodo = (id: number) => ({\r\n  type: 'DELETE_TODO',\r\n  id\r\n})\r\n\r\nexport const setVisibilityFilter = (filter: Filter) => ({\r\n  type: 'SET_FILTER',\r\n  filter\r\n})\r\n\r\nexport const toggleTodo = (id: number) => ({\r\n  type: 'TOGGLE_TODO',\r\n  id\r\n})\r\n\r\n","import React, { useRef } from 'react'\r\nimport { Dispatch } from 'redux'\r\nimport { connect, useDispatch } from 'react-redux'\r\nimport { addTodo } from '../actions'\r\nimport styles from '../assets/scss/addTodo.module.scss'\r\n\r\nconst AddTodo = () => {\r\n  const dispatch: Dispatch<any> = useDispatch()\r\n  const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n  return (\r\n    <form onSubmit={e => {\r\n      e.preventDefault()\r\n      // 如果输入的全是空字符，则返回\r\n      if (inputRef.current && !inputRef.current.value.trim()) return\r\n\r\n      if (inputRef.current) {\r\n        dispatch(addTodo(inputRef.current.value))\r\n        inputRef.current.value = ''\r\n      }\r\n    }}>\r\n      <h2 className={styles.label_wrap}>\r\n        <label htmlFor=\"new-todo-input\">What needs to be done?</label>\r\n      </h2>\r\n      <div className=\"wrapper\">\r\n        <input id=\"new-todo-input\" ref={inputRef}></input>\r\n        <button className=\"add_btn\" type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default connect()(AddTodo)\r\n","import React from 'react'\r\n\r\ninterface LinkProps {\r\n  active: boolean;\r\n  children: string;\r\n  onClick: () => {}\r\n}\r\n\r\nconst Link = ({ active, children, onClick }: LinkProps) => {\r\n  return (\r\n    <button\r\n      disabled={active}\r\n      className=\"toggle_btn\"\r\n      onClick={e => {\r\n        e.preventDefault()\r\n        onClick()\r\n      }}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Link","import { connect } from 'react-redux'\r\nimport Link from '../components/Link'\r\nimport { setVisibilityFilter } from '../actions'\r\nimport type { Dispatch } from 'redux'\r\nimport type { RootState } from '../types/store'\r\nimport type { Filter } from '../types/actions'\r\n\r\ntype OwnProps = {\r\n  filter: Filter;\r\n}\r\nconst mapStateToProps = (\r\n  state: RootState,\r\n  ownProps: OwnProps,\r\n) => ({\r\n  active: state.visibilityFilter === ownProps.filter\r\n})\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch,\r\n  ownProps: OwnProps,\r\n) => ({\r\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Link)\r\n","import React from 'react'\r\nimport FilterLink from '../container/FilterLink'\r\n\r\nconst Filter = () => (\r\n  <div className=\"wrapper\">\r\n    <FilterLink filter='SHOW_ALL'>\r\n      All\r\n    </FilterLink>\r\n    <FilterLink filter='SHOW_ACTIVE'>\r\n      Active\r\n    </FilterLink>\r\n    <FilterLink filter='SHOW_COMPLETED'>\r\n      Completed\r\n    </FilterLink>\r\n  </div>\r\n)\r\n\r\nexport default Filter","import React, { useState } from \"react\"\r\nimport styles from '../assets/scss/todo.module.scss'\r\nexport interface TodoProps {\r\n  id: number;\r\n  completed: boolean;\r\n  text: string;\r\n  toggleTaskCompleted: () => {};\r\n  editTodo: (id: number, text: string) => {};\r\n  deleteTodo: () => {};\r\n}\r\n\r\nexport const Todo = ({ id, completed, text, toggleTaskCompleted, editTodo, deleteTodo }: TodoProps) => {\r\n  const [isEditing, setEdit] = useState(false)\r\n  const [newTodo, setNewTodo] = useState('')\r\n\r\n  const editTemplate = (\r\n    <form\r\n      onSubmit={e => {\r\n        e.preventDefault()\r\n        editTodo(id, newTodo)\r\n        if (!newTodo.trim()) {\r\n          deleteTodo()\r\n        }\r\n        setEdit(false)\r\n        setNewTodo('')\r\n      }}\r\n    >\r\n      <div className={styles.edit_wrap}>\r\n        <label htmlFor=\"todo-edit\">New name for <span>{text}</span></label>\r\n        <input\r\n          id=\"todo-edit\"\r\n          type=\"text\"\r\n          value={newTodo}\r\n          onChange={(e) => setNewTodo(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"btn_group\">\r\n        <button className=\"save_btn\" type=\"submit\">Save</button>\r\n        <button className=\"delete_btn\" onClick={() => setEdit(false)}>\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n  const viewTemplate = (\r\n    <div>\r\n      <div className={styles.checkbox_wrap}>\r\n        <input\r\n          id=\"todo\"\r\n          type=\"checkbox\"\r\n          defaultChecked={completed}\r\n          onChange={() => toggleTaskCompleted()}\r\n        />\r\n        <label className={styles.todo_label} htmlFor=\"todo\">\r\n          {text}\r\n        </label>\r\n      </div>\r\n      <div className=\"btn_group\">\r\n        <button className=\"edit_btn\" onClick={() => setEdit(true)}>\r\n          Edit\r\n        </button>\r\n        <button className=\"delete_btn\" onClick={() => deleteTodo()}>Delete</button>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <li>\r\n      {isEditing ? editTemplate : viewTemplate}\r\n    </li>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Todo } from './Todo'\r\nimport type { ToDoItemType } from '../types/todos'\r\nimport styles from '../assets/scss/todoList.module.scss'\r\n\r\ninterface TodoListProps {\r\n  todos: ToDoItemType[];\r\n  visible: string;\r\n  editTodo: (id: number, text: string) => {};\r\n  toggleTodo: (id: number) => {};\r\n  deleteTodo: (id: number) => {};\r\n}\r\n\r\nconst TodoList = ({ todos, visible, editTodo, toggleTodo, deleteTodo }: TodoListProps) => (\r\n  <ul>\r\n    <h2 className={styles.list_head}>{todos.length} tasks {visible}</h2>\r\n    {todos.map((todo) => (\r\n      <Todo\r\n        key={todo.id}\r\n        {...todo}\r\n        editTodo={(id: number, text: string) => editTodo(id, text)}\r\n        toggleTaskCompleted={() => toggleTodo(todo.id)}\r\n        deleteTodo={() => deleteTodo(todo.id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n)\r\n\r\nexport default TodoList\r\n","import TodoList from '../components/TodoList'\r\nimport type { Dispatch } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { toggleTodo, editTodo, deleteTodo } from '../actions'\r\nimport type { RootState } from '../types/store'\r\n\r\n\r\nconst getVisibleTodoList = (\r\n  { todos, visibilityFilter }: RootState\r\n) => {\r\n  switch (visibilityFilter) {\r\n    case 'SHOW_COMPLETED':\r\n      return todos.filter((todo) => todo.completed)\r\n    case 'SHOW_ACTIVE':\r\n      return todos.filter((todo) => !todo.completed)\r\n    default:\r\n      return todos\r\n  }\r\n}\r\n\r\nconst getVisible = (filter: RootState['visibilityFilter']) => {\r\n  switch (filter) {\r\n    case 'SHOW_COMPLETED':\r\n      return 'completed'\r\n    case 'SHOW_ACTIVE':\r\n      return 'active'\r\n    default:\r\n      return 'all'\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  todos: getVisibleTodoList(state),\r\n  visible: getVisible(state.visibilityFilter),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  editTodo: (id: number, text: string) => dispatch(editTodo(id, text)),\r\n  toggleTodo: (id: number) => dispatch(toggleTodo(id)),\r\n  deleteTodo: (id: number) => dispatch(deleteTodo(id)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList)\r\n","import React from 'react';\nimport AddTodo from './container/AddTodo'\nimport Filter from './components/Filter'\nimport VisibleTodoList from './container/VisibleTodoList'\nimport './assets/scss/app.scss'\n\nconst App = () => (\n  <div className=\"todoapp\">\n    <AddTodo />\n    <Filter />\n    <VisibleTodoList />\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducers from './reducers'\nimport App from './App'\nimport './assets/scss/reset.scss'\n\nconst store = createStore(reducers)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox_wrap\":\"todo_checkbox_wrap__1s8fx\",\"todo_label\":\"todo_todo_label__2Qwev\",\"edit_wrap\":\"todo_edit_wrap__1E1Le\"};"],"sourceRoot":""}